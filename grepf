#!/usr/bin/env bash

if [ "$#" -ge 1 ]; then
  PATTERN="$1"; shift
  if [ "$#" -gt 0 ]; then
    IN="$(echo "$@" | sed -n "s/\(.*\)::\(.*\)/\1/p")"
    EX="$(echo "$@" | sed -n "s/\(.*\)::\(.*\)/\2/p")"
    [ "$IN" = "" -a "$EX" = "" ] && IN="$@"
    [ "$IN" = "" -o "$IN" = "::" ] && IN=""
  fi
  ID="$(echo "$IN" | awk '{for (i=1;i<=NF;i++) if ($i ~ /\/$/) printf "%s ", substr($i,1,length($i)-1)}')"
  IF="$(echo "$IN" | awk '{for (i=1;i<=NF;i++) if ($i ~ /[^\/]$/) printf "%s ", $i}')"
  ED="$(echo "$EX" | awk '{for (i=1;i<=NF;i++) if ($i ~ /\/$/) printf "%s ", substr($i,1,length($i)-1) }')"
  EF="$(echo "$EX" | awk '{for (i=1;i<=NF;i++) if ($i ~ /[^\/]$/) printf "%s ", $i}')"
  [ "$ID" != "" ] && ID="--include-dir={$(echo $ID | awk -v OFS="," '$1=$1' | sed 's/$/,/')}"
  [ "$IF" != "" ] && IF="--include={$(echo $IF | awk -v OFS="," '$1=$1' | sed 's/$/,/')}"
  [ "$ED" != "" ] && ED="--exclude-dir={$(echo $ED | awk -v OFS="," '$1=$1' | sed 's/$/,/')}"
  [ "$EF" != "" ] && EF="--exclude={$(echo $EF | awk -v OFS="," '$1=$1' | sed 's/$/,/')}"
  eval "grep -rEIHn --context=3 --color=always -e \"$PATTERN\" * $ID $IF $ED $EF | less -RiMSFX#4"
else
  echo "   Usage: grepf <pattern> [INCLUDED...] [:: EXCLUDED...]"
  echo
  echo "   Search for <pattern> within <INCLUDED> files, ignoring <EXCLUDED> files."
  echo "   <INCLUDED> files are separated from <EXCLUDED> files by a '::'."
  echo "   When omitted, <INCLUDED> is the current dir and <EXCLUDED> is empty."
  echo
  echo "   Examples:"
  echo "      grepf pattern"
  echo "      grepf pattern *.py"
  echo "      grepf pattern file1.txt folder1/ :: folder1/file2.txt"
  echo "      grepf pattern :: file1.txt **/*.log"
  echo
  echo "   Options:"
  echo "      --info       Instead of showing each match, show an overview of which files"
  echo "                   were matched and how many matches each file."
  echo "      --showcmd    Show the full command that grepf transforms into."
fi
