#!/usr/bin/env bash

argc="$#";: "$((i=0))"
while [ "$i" -lt "$argc" ]; do
  [ "$(echo $1 | grep "'")" ] && sq='true'
  if [ "$1" = '--help' ] || [ "$1" = '-h' ] || [ "$1" = '--h' ]; then Help='true'
  elif [ "$1" = '--list' ] || [ "$1" = '--l' ];                  then List='true'
  elif [ "$1" = '--describe' ] || [ "$1" = '--desc' ];           then Describe='true'
  elif [ "$1" = '--raw' ];                                       then Raw='true'
  elif [ "$(echo $1 | cut -c1-1)" = '-' ];                       then OPTS="$OPTS $1"
  elif [ "$1" = '::' ];                                          then exclude_active='true'
  elif [ "$PATTERN" = '' ]; then
    if [ "$sq" ];
    then PATTERN="$(printf "\"%q\"" $1)";
    else PATTERN="$(printf "'%q'" $1)";
    fi
  else
    isdir=''; [ "$(echo -n $1 | tail -c1)" = '/' ] && isdir='true'
    if [ "$isdir" ]; then arg="$(echo $1 | sed 's/.$//')"; else arg="$1"; fi
    if [ "$exclude_active" ]; then
      if [ "$isdir" ]; then
        ED="$(echo $ED --exclude-dir=\'$arg\')"
      else
        EF="$(echo $EF --exclude=\'$arg\')"
      fi
    else
      if [ "$isdir" ]; then
        ID="$(echo $ID \'$arg\')"
      else
        IF="$(echo $IF \'$arg\')"
      fi
    fi
  fi
  shift;: "$((i=i+1))"
done
[ -z "$Raw" ] && ED="$ED --exclude-dir='.git'"
[ "$ID$IF" = '' ] && ID='.'

# [ "$Help" ] && echo "--help is active"
# [ "$List" ] && echo "--list is active"
# [ "$Describe" ] && echo "--describe is active"
# [ "$Raw" ] && echo "--raw is active"
# echo "PATTERN is $PATTERN"
# echo "ED is $ED"
# echo "EF is $EF"
# echo "ID is $ID"
# echo "IF is $IF"
# echo "OPTS are $OPTS"
# exit 0

if [ "$PATTERN" != '' ] && [ -z "$Help" ]; then
  if [ "$List" ]; then
    cmd="grep $OPTS -rEIl --context=3 --color=always -e $PATTERN $ID $IF $ED $EF | less -RiMSFX#4"
  else
    cmd="grep $OPTS -rEIHn --context=3 --color=always -e $PATTERN $ID $IF $ED $EF | less -RiMSFX#4"
  fi;
  if [ "$Describe" ]; then echo "$cmd"; else eval "$cmd"; fi
else
  echo "   Usage: grepf <pattern> [INCLUDED...] [:: EXCLUDED...] [--OPTIONS...]"
  echo
  echo "   Search for <pattern> within [INCLUDED] files, ignoring [EXCLUDED] files."
  echo "   [INCLUDED] files are separated from [EXCLUDED] files by a '::'."
  echo "   By default, [INCLUDED] is the current directory."
  echo
  echo "   Examples:"
  echo "      grepf pattern"
  echo "      grepf pattern '*.py'"
  echo "      grepf pattern file1.txt folder1/ :: folder1/file2.txt"
  echo "      grepf pattern :: file1.txt '**/*.log'"
  echo
  echo "   Options:"
  echo "      --help       Show this help"
  echo "      --list       List the files that are affected"
  echo "      --describe   Show the full command that grepf transforms into"
  echo "      --raw        Raw unfiltered searches i.e. .git/ is filtered by default, this"
  echo "                   turns it off"
  echo
  echo "   Note:"
  echo "      Any [--OPTIONS] you can pass to grep, you can pass to grepf as well."
  echo "      If in doubt, wrap it in single quotes 'like this'"
fi
